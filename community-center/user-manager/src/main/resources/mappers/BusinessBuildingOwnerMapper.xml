<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaojun.usermanager.mapper.BusinessBuildingOwnerMapper">
  <resultMap id="BaseResultMap" type="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwner">
    <!--@mbg.generated-->
    <id column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="member_id" jdbcType="VARCHAR" property="memberId" />
    <result column="b_id" jdbcType="VARCHAR" property="bId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="link" jdbcType="VARCHAR" property="link" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operate" jdbcType="VARCHAR" property="operate" />
    <result column="owner_type_cd" jdbcType="VARCHAR" property="ownerTypeCd" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    owner_id, member_id, b_id, `name`, sex, age, link, user_id, remark, create_time, 
    operate, owner_type_cd
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from business_building_owner
    where owner_id = #{ownerId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from business_building_owner
    where owner_id = #{ownerId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwner">
    <!--@mbg.generated-->
    insert into business_building_owner (owner_id, member_id, b_id, 
      `name`, sex, age, link, 
      user_id, remark, create_time, 
      operate, owner_type_cd)
    values (#{ownerId,jdbcType=VARCHAR}, #{memberId,jdbcType=VARCHAR}, #{bId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{link,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{operate,jdbcType=VARCHAR}, #{ownerTypeCd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwner">
    <!--@mbg.generated-->
    insert into business_building_owner
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="bId != null">
        b_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="link != null">
        link,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operate != null">
        operate,
      </if>
      <if test="ownerTypeCd != null">
        owner_type_cd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="bId != null">
        #{bId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="link != null">
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operate != null">
        #{operate,jdbcType=VARCHAR},
      </if>
      <if test="ownerTypeCd != null">
        #{ownerTypeCd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwner">
    <!--@mbg.generated-->
    update business_building_owner
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=VARCHAR},
      </if>
      <if test="bId != null">
        b_id = #{bId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="link != null">
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operate != null">
        operate = #{operate,jdbcType=VARCHAR},
      </if>
      <if test="ownerTypeCd != null">
        owner_type_cd = #{ownerTypeCd,jdbcType=VARCHAR},
      </if>
    </set>
    where owner_id = #{ownerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwner">
    <!--@mbg.generated-->
    update business_building_owner
    set member_id = #{memberId,jdbcType=VARCHAR},
      b_id = #{bId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      link = #{link,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operate = #{operate,jdbcType=VARCHAR},
      owner_type_cd = #{ownerTypeCd,jdbcType=VARCHAR}
    where owner_id = #{ownerId,jdbcType=VARCHAR}
  </update>
</mapper>