<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaojun.usermanager.mapper.BusinessBuildingOwnerRoomRelMapper">
  <resultMap id="BaseResultMap" type="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwnerRoomRel">
    <!--@mbg.generated-->
    <id column="rel_id" jdbcType="INTEGER" property="relId" />
    <result column="owner_id" jdbcType="INTEGER" property="ownerId" />
    <result column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="b_id" jdbcType="INTEGER" property="bId" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operate" jdbcType="VARCHAR" property="operate" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    rel_id, owner_id, room_id, b_id, `state`, user_id, remark, create_time, operate
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from business_building_owner_room_rel
    where rel_id = #{relId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from business_building_owner_room_rel
    where rel_id = #{relId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="rel_id" keyProperty="relId" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwnerRoomRel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into business_building_owner_room_rel (owner_id, room_id, b_id, 
      `state`, user_id, remark, 
      create_time, operate)
    values (#{ownerId,jdbcType=INTEGER}, #{roomId,jdbcType=INTEGER}, #{bId,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{operate,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="rel_id" keyProperty="relId" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwnerRoomRel" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into business_building_owner_room_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="roomId != null">
        room_id,
      </if>
      <if test="bId != null">
        b_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operate != null">
        operate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ownerId != null">
        #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="bId != null">
        #{bId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operate != null">
        #{operate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwnerRoomRel">
    <!--@mbg.generated-->
    update business_building_owner_room_rel
    <set>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=INTEGER},
      </if>
      <if test="roomId != null">
        room_id = #{roomId,jdbcType=INTEGER},
      </if>
      <if test="bId != null">
        b_id = #{bId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operate != null">
        operate = #{operate,jdbcType=VARCHAR},
      </if>
    </set>
    where rel_id = #{relId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwnerRoomRel">
    <!--@mbg.generated-->
    update business_building_owner_room_rel
    set owner_id = #{ownerId,jdbcType=INTEGER},
      room_id = #{roomId,jdbcType=INTEGER},
      b_id = #{bId,jdbcType=INTEGER},
      `state` = #{state,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      operate = #{operate,jdbcType=VARCHAR}
    where rel_id = #{relId,jdbcType=INTEGER}
  </update>
    <select id="selectByownerId" resultType="com.xiaojun.usermanager.domain.entity.BusinessBuildingOwnerRoomRel">
      select  owner_id, room_id, b_id, `state`, user_id, remark, create_time, operate
       from business_building_owner_room_rel where owner_id=#{ownerId}
    </select>
</mapper>